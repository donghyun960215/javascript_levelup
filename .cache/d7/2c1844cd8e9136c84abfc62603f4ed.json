{"id":"main.js","dependencies":[{"name":"/Users/donghyun/Desktop/프론트엔드/연습/javascript_levelup/package.json","includedInParent":true,"mtime":1673443914100}],"generated":{"js":"var str = 'Hello world';\nconsole.log(str.length);\n//length 사용시 문자열 갯수 확인 가능 \n//const str = '0123'\n\n/*\nconsole.log(str.indexOf('world')) \nindexOf()메소드사용시 -1이 아닌 다른 숫자가 뜬다면 인수로 사용한 문자데이터가 대상의 문자데이터 안에 있다는 뜻\n-1이 넘어오면 없다는 뜻\n\nconsole.log(str.indexOf('world') !== -1) \n비교연산자를 사용하게 된다면 바로 false true 변환가능\n*/\n\n/*\nconsole.log(str.slice(6,11))\n문자열의 일부를 추출하면서 새로운 문자열을 반환한다\n*/\n\n/*\nconsole.log(str.replace('world', 'dong'))\n첫번째 인수에 있는 문자를 찾아서 두번째 인수에 있는 문자로 교체를 해준다.\n*/\n\n/*\nconst str1 = 'tlzma789@naver.com'\nconst result = str1.match(/.+(?=@)/)[0]\nconsole.log(`${result}`)\nconsole.log(str1.match(/.+(?=@)/)[0])\n특정한문자데이터에서 정규식표현을 같이 사용하면서 특정한 문자를 매치시킬 수 있고 배열데이터[0]로 변환한다.\n*/\n\n/*\nconst str2 = '       Hello world   '\nconsole.log(str2.trim())\n공백제거\n*/"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"main.js","original":{"line":1,"column":0}},{"generated":{"line":1,"column":4},"source":"main.js","original":{"line":1,"column":6},"name":"str"},{"generated":{"line":1,"column":7},"source":"main.js","original":{"line":1,"column":9}},{"generated":{"line":1,"column":10},"source":"main.js","original":{"line":1,"column":11}},{"generated":{"line":1,"column":23},"source":"main.js","original":{"line":1,"column":24}},{"generated":{"line":2,"column":0},"source":"main.js","original":{"line":4,"column":0},"name":"console"},{"generated":{"line":2,"column":7},"source":"main.js","original":{"line":4,"column":7}},{"generated":{"line":2,"column":8},"source":"main.js","original":{"line":4,"column":8},"name":"log"},{"generated":{"line":2,"column":11},"source":"main.js","original":{"line":4,"column":11}},{"generated":{"line":2,"column":12},"source":"main.js","original":{"line":4,"column":12},"name":"str"},{"generated":{"line":2,"column":15},"source":"main.js","original":{"line":4,"column":15}},{"generated":{"line":2,"column":16},"source":"main.js","original":{"line":4,"column":16},"name":"length"},{"generated":{"line":2,"column":22},"source":"main.js","original":{"line":4,"column":22}},{"generated":{"line":2,"column":23},"source":"main.js","original":{"line":4,"column":23}},{"generated":{"line":3,"column":0},"source":"main.js","original":{"line":5,"column":0}},{"generated":{"line":4,"column":0},"source":"main.js","original":{"line":6,"column":0}},{"generated":{"line":6,"column":0},"source":"main.js","original":{"line":9,"column":0}},{"generated":{"line":7,"column":0},"source":"main.js","original":{"line":10,"column":0}},{"generated":{"line":8,"column":0},"source":"main.js","original":{"line":11,"column":0}},{"generated":{"line":9,"column":0},"source":"main.js","original":{"line":12,"column":0}},{"generated":{"line":10,"column":0},"source":"main.js","original":{"line":13,"column":0}},{"generated":{"line":11,"column":0},"source":"main.js","original":{"line":14,"column":0}},{"generated":{"line":12,"column":0},"source":"main.js","original":{"line":15,"column":0}},{"generated":{"line":13,"column":0},"source":"main.js","original":{"line":16,"column":0}},{"generated":{"line":15,"column":0},"source":"main.js","original":{"line":18,"column":0}},{"generated":{"line":16,"column":0},"source":"main.js","original":{"line":19,"column":0}},{"generated":{"line":17,"column":0},"source":"main.js","original":{"line":20,"column":0}},{"generated":{"line":18,"column":0},"source":"main.js","original":{"line":21,"column":0}},{"generated":{"line":20,"column":0},"source":"main.js","original":{"line":23,"column":0}},{"generated":{"line":21,"column":0},"source":"main.js","original":{"line":24,"column":0}},{"generated":{"line":22,"column":0},"source":"main.js","original":{"line":25,"column":0}},{"generated":{"line":23,"column":0},"source":"main.js","original":{"line":26,"column":0}},{"generated":{"line":25,"column":0},"source":"main.js","original":{"line":28,"column":0}},{"generated":{"line":26,"column":0},"source":"main.js","original":{"line":29,"column":0}},{"generated":{"line":27,"column":0},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":28,"column":0},"source":"main.js","original":{"line":31,"column":0}},{"generated":{"line":29,"column":0},"source":"main.js","original":{"line":32,"column":0}},{"generated":{"line":30,"column":0},"source":"main.js","original":{"line":33,"column":0}},{"generated":{"line":31,"column":0},"source":"main.js","original":{"line":34,"column":0}},{"generated":{"line":33,"column":0},"source":"main.js","original":{"line":36,"column":0}},{"generated":{"line":34,"column":0},"source":"main.js","original":{"line":37,"column":0}},{"generated":{"line":35,"column":0},"source":"main.js","original":{"line":38,"column":0}},{"generated":{"line":36,"column":0},"source":"main.js","original":{"line":39,"column":0}},{"generated":{"line":37,"column":0},"source":"main.js","original":{"line":40,"column":0}}],"sources":{"main.js":"const str ='Hello world'\n\n\nconsole.log(str.length)\n//length 사용시 문자열 갯수 확인 가능 \n//const str = '0123'\n\n\n/*\nconsole.log(str.indexOf('world')) \nindexOf()메소드사용시 -1이 아닌 다른 숫자가 뜬다면 인수로 사용한 문자데이터가 대상의 문자데이터 안에 있다는 뜻\n-1이 넘어오면 없다는 뜻\n\nconsole.log(str.indexOf('world') !== -1) \n비교연산자를 사용하게 된다면 바로 false true 변환가능\n*/\n\n/*\nconsole.log(str.slice(6,11))\n문자열의 일부를 추출하면서 새로운 문자열을 반환한다\n*/\n\n/*\nconsole.log(str.replace('world', 'dong'))\n첫번째 인수에 있는 문자를 찾아서 두번째 인수에 있는 문자로 교체를 해준다.\n*/\n\n/*\nconst str1 = 'tlzma789@naver.com'\nconst result = str1.match(/.+(?=@)/)[0]\nconsole.log(`${result}`)\nconsole.log(str1.match(/.+(?=@)/)[0])\n특정한문자데이터에서 정규식표현을 같이 사용하면서 특정한 문자를 매치시킬 수 있고 배열데이터[0]로 변환한다.\n*/\n\n/*\nconst str2 = '       Hello world   '\nconsole.log(str2.trim())\n공백제거\n*/"},"lineCount":null}},"error":null,"hash":"f8e8a5275e20d50f6f19c5b89cfdab26","cacheData":{"env":{}}}